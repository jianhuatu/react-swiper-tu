(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"), require("swiper-tu"));
	else if(typeof define === 'function' && define.amd)
		define("ReactSwipe", ["react", "swiper-tu"], factory);
	else if(typeof exports === 'object')
		exports["ReactSwipe"] = factory(require("react"), require("swiper-tu"));
	else
		root["ReactSwipe"] = factory(root["React"], root["Swipe"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(1);


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _swiperTu = __webpack_require__(3);

	var _swiperTu2 = _interopRequireDefault(_swiperTu);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var SwiperComponent = function (_Component) {
				_inherits(SwiperComponent, _Component);

				function SwiperComponent() {
							_classCallCheck(this, SwiperComponent);

							return _possibleConstructorReturn(this, (SwiperComponent.__proto__ || Object.getPrototypeOf(SwiperComponent)).apply(this, arguments));
				}

				_createClass(SwiperComponent, [{
							key: "componentDidMount",
							value: function componentDidMount() {
										this.swiper = new _swiperTu2.default(this.refs.swiper, this.props.swiperOption);
							}
				}, {
							key: "componentWillUnmount",
							value: function componentWillUnmount() {
										this.swiper.kill();
										this.swiper = void 0;
							}
				}, {
							key: "createScrollbar",
							value: function createScrollbar() {
										return this.props.swiperOption.scrollbar ? _react2.default.createElement("div", { className: "swiper-scrollbar" }) : [];
							}
				}, {
							key: "createPagination",
							value: function createPagination() {
										return this.props.swiperOption.pagination == ".swiper-pagination" ? _react2.default.createElement("div", { className: "swiper-pagination" }) : [];
							}
				}, {
							key: "createPrevButton",
							value: function createPrevButton() {
										return this.props.swiperOption.prevButton == ".swiper-button-prev" ? _react2.default.createElement("div", { className: "swiper-button-prev" }) : [];
							}
				}, {
							key: "createNextButton",
							value: function createNextButton() {
										return this.props.swiperOption.nextButton == ".swiper-button-next" ? _react2.default.createElement("div", { className: "swiper-button-next" }) : [];
							}
				}, {
							key: "createSwiperSlider",
							value: function createSwiperSlider() {
										var slider = new Array();
										var children = this.props.children.length ? this.props.children : [this.props.children];
										for (var i = 0, ilen = children.length; i < ilen; i++) {
													slider.push(_react2.default.createElement(
																"div",
																{ key: i, className: "swiper-slide" },
																children[i]
													));
										}
										return slider;
							}
				}, {
							key: "render",
							value: function render() {
										var scrollbar = this.createScrollbar();
										var pagination = this.createPagination();
										var swiperSlide = this.createSwiperSlider();
										var prevButton = this.createPrevButton();
										var nextButton = this.createNextButton();

										return _react2.default.createElement(
													"div",
													{ ref: "swiper", className: "swiper-container" },
													_react2.default.createElement(
																"div",
																{ className: "swiper-wrapper" },
																swiperSlide
													),
													scrollbar,
													pagination,
													prevButton,
													nextButton
										);
							}
				}]);

				return SwiperComponent;
	}(_react.Component);

	SwiperComponent.defaultProps = {
				swiperOption: {
							initialSlide: 0, //index
							direction: "vertical", //horizontal
							speed: 300, //number
							autoplay: 0, //number
							autoplayDisableOnInteraction: true, //boolean
							autoplayStopOnLast: false, //boolean
							grabCursor: false, //boolean
							parallax: false, //boolean
							hashnav: false, //boolean
							hashnavWatchState: false, //boolean
							history: false, //string
							replaceState: false, //boolean
							setWrapperSize: false, //boolean
							virtualTranslate: false, //boolean
							a11y: false, //boolean
							width: void 0, //number
							height: void 0, //number
							roundLengths: true, //boolean
							breakpoints: {}, //Object
							autoHeight: false, //boolean
							swiper: false, //boolean
							watchSlidesProgress: false, //boolean
							watchSlidesVisibility: false, //boolean

							freeMode: true, //boolean
							freeModeMomentum: false, //boolean
							freeModeMomentumRatio: 1, //number
							freeModeMomentumVelocityRatio: 1, //number
							freeModeMomentumBounce: true, //boolean
							freeModeMomentumBounceRatio: 1, //number
							freeModeSticky: false, //boolean

							centeredSlides: false, //boolean
							slidesPerView: "auto", //number
							slidesPerGroup: 1, //number
							spaceBetween: 0, //number
							slidesPerColumn: 1, //number
							slidesPerColumnFill: 'column', //row
							slidesOffsetBefore: 0, //number
							slidesOffsetAfter: 0, //number

							effect: "slide", //fade cube coverflow flip
							fade: false, //boolean
							cube: {
										slideShadows: true, //boolean
										shadow: true, //boolean
										shadowOffset: 20, //number
										shadowScale: 0.94 //number
							},
							coverflow: {
										rotate: 50, //number
										stretch: 0, //number
										depth: 100, //number
										modifier: 1, //number
										slideShadows: true //boolean
							},
							flip: {
										slideShadows: true, //boolean
										limitRotation: true //
							},

							preventClicks: true,
							preventClicksPropagation: true,
							slideToClickedSlide: false,

							touchRatio: 1,
							simulateTouch: true,
							onlyExternal: false,
							followFinger: true,
							shortSwipes: true,
							longSwipesRatio: 0.5,
							threshold: false,
							touchAngle: 45,
							longSwipes: true,
							longSwipesMs: 300,
							touchMoveStopPropagation: true,
							resistance: true,
							resistanceRatio: 0.85,
							iOSEdgeSwipeDetection: false,
							iOSEdgeSwipeThreshold: 20,
							passiveListeners: true,
							touchReleaseOnEdges: false,

							noSwiping: true,
							noSwipingClass: "swiper-no-swiping",
							allowSwipeToNext: true,
							allowSwipeToPrev: true,
							swipeHandler: null,

							pagination: null,
							paginationType: "bullets", //fraction progress custom
							paginationClickable: false,
							paginationHide: false,
							paginationElement: "span",
							paginationBulletRender: null, //function
							paginationFractionRender: null, //function
							paginationProgressRender: null, //function
							paginationCustomRender: null, //function
							uniqueNavElements: true,

							prevButton: null,
							nextButton: null,

							scrollbar: null,
							scrollbarHide: true,
							scrollbarDraggable: false,
							scrollbarSnapOnRelease: false,

							keyboardControl: false,
							mousewheelControl: false,
							mousewheelForceToAxis: false,
							mousewheelReleaseOnEdges: false,
							mousewheelInvert: false,
							mousewheelSensitivity: 1,
							mousewheelEventsTarged: 'container',

							preloadImages: true,
							updateOnImagesReady: true,
							lazyLoading: false,
							lazyLoadingInPrevNext: false,
							lazyLoadingInPrevNextAmount: 1,
							lazyLoadingOnTransitionStart: false,

							loop: false,
							loopAdditionalSlides: 0,
							loopedSlides: 1,

							zoom: false,
							zoomMax: 3,
							zoomMin: 1,
							zoomToggle: true,

							control: null,
							controlInverse: false,
							controlBy: 'slide', //'container'
							normalizeSlideIndex: true,

							observer: false,
							observeParents: false,

							wrapperClass: "swiper-wrapper",
							slideClass: "swiper-slide",
							slideActiveClass: "swiper-slide-active",
							slideVisibleClass: "swiper-slide-visible",
							bulletClass: "swiper-pagination-bullet",
							bulletActiveClass: "swiper-pagination-bullet-active",
							slideDuplicateClass: "swiper-slide-duplicate",
							slideNextClass: "swiper-slide-next",
							slidePrevClass: "swiper-slide-prev",
							paginationHiddenClass: "swiper-pagination-hidden",
							buttonDisabledClass: "swiper-button-disabled",
							slideDuplicateActiveClass: "swiper-slide-duplicate-active",
							slideDuplicateNextClass: "swiper-slide-duplicate-next",
							slideDuplicatePrevClass: "swiper-slide-duplicate-prev",
							containerModifierClass: "swiper-container-",
							lazyLoadingClass: "swiper-lazy",
							notificationClass: "swiper-notification",
							paginationClickableClass: "swiper-pagination-clickable",
							paginationModifierClass: "swiper-pagination-",
							lazyStatusLoadingClass: "swiper-lazy-loading",
							lazyStatusLoadedClass: "swiper-lazy-loaded",
							lazyPreloaderClass: "swiper-lazy-preloader",
							preloaderClass: "preloader",
							zoomContainerClass: "swiper-zoom-container",
							paginationCurrentClass: "swiper-pagination-current",
							paginationTotalClass: "swiper-pagination-total",
							paginationProgressbarClass: "swiper-pagination-progressbar",

							onInit: void 0,
							onTouchStart: void 0,
							onTouchMove: void 0,
							onTouchEnd: void 0,
							onSlideChangeStart: void 0,
							onSlideChangeEnd: void 0,
							onImagesReady: void 0,
							runCallbacksOnInit: true,
							onTransitionStart: void 0,
							onTransitionEnd: void 0,
							onTouchMoveOpposite: void 0,
							onSliderMove: void 0,
							onClick: void 0,
							onTap: void 0,
							onDoubleTap: void 0,
							onProgress: void 0,
							onReachBeginning: void 0,
							onReachEnd: void 0,
							onDestroy: void 0,
							onAutoplay: void 0,
							onAutoplayStart: void 0,
							onAutoplayStop: void 0,
							onLazyImageLoad: void 0,
							onLazyImageReady: void 0,
							onSetTransition: void 0,
							onSetTranslate: void 0,
							onSlideNextStart: void 0,
							onSlideNextEnd: void 0,
							onSlidePrevStart: void 0,
							onSlidePrevEnd: void 0,
							onPaginationRendered: void 0,
							onScroll: void 0

				}
	};


	module.exports = SwiperComponent;

/***/ },
/* 2 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_2__;

/***/ },
/* 3 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_3__;

/***/ }
/******/ ])
});
;